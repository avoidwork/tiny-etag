{
  "name": "tiny-etag",
  "tagline": "ETag middleware",
  "body": "# tiny-etag\r\n\r\n[![build status](https://secure.travis-ci.org/avoidwork/tiny-etag.svg)](http://travis-ci.org/avoidwork/tiny-etag)\r\n\r\nETag middleware\r\n\r\n## Example\r\n```javascript\r\n\"use strict\";\r\n\r\nconst http = require(\"http\"),\r\n\tmax = 1000,\r\n\tseed = Math.floor(Math.random() * max) + 1;\r\n\r\nlet router = require(\"woodland\")({cacheSize: max, defaultHeaders: {\"Cache-Control\": \"no-cache\"}, seed: seed}),\r\n\tetag = require(\"tiny-etag\")({cacheSize: max, seed: seed});\r\n\r\nrouter.use(etag.middleware).blacklist(etag.middleware);\r\n\r\nrouter.use(\"/\", (req, res) => {\r\n\tconst body = \"Hello World!\";\r\n\r\n\tres.writeHead(200, {\"Content-Type\": \"text/plain\", \"ETag\": etag.create(body)});\r\n\tres.end(body);\r\n});\r\n\r\nhttp.createServer(router.route).listen(8000);\r\n```\r\n\r\n## API\r\n\r\n##### etag ({cacheSize: 1000, seed: random})\r\nReturns an tiny-etag instance\r\n\r\n##### create (arg)\r\nCreates a strong ETag value from `arg`\r\n\r\n##### hash (arg)\r\nCreates a hash of `arg`, used by `create()`\r\n\r\n##### middleware (req, res, next)\r\nMiddleware to be used by an http framework\r\n\r\n##### register (url, state)\r\nAdds `url` to the `cache`\r\n\r\n##### unregister (url)\r\nRemoves `url` from the `cache`\r\n\r\n## License\r\nCopyright (c) 2016 Jason Mulligan\r\nLicensed under the BSD-3 license",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}